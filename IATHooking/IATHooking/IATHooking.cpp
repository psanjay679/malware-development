#include <stdio.h>
#include <Windows.h>
#include <winternl.h>

HMODULE hooked_func(LPCSTR module) {
    printf("You are hooked\n");
    return GetModuleHandleA(module);
}

void parse_pe() {
    
    LPVOID base_addr = GetModuleHandleA(NULL);
    PIMAGE_DOS_HEADER dos_header = (PIMAGE_DOS_HEADER)base_addr;
    PIMAGE_NT_HEADERS nt_headers = (PIMAGE_NT_HEADERS)((DWORD64)base_addr + dos_header->e_lfanew);
    PIMAGE_THUNK_DATA first_thunk, original_first_thunk;
    DWORD64 thunk;
    DWORD64 func_addr, func_name_addr;
    PIMAGE_IMPORT_BY_NAME func_name;

    PIMAGE_IMPORT_DESCRIPTOR import_descriptor = (PIMAGE_IMPORT_DESCRIPTOR)((DWORD64)base_addr + nt_headers->OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_IMPORT].VirtualAddress);
    
    for (; import_descriptor->Name != 0; import_descriptor++) {
        
        first_thunk = (PIMAGE_THUNK_DATA)((DWORD64)base_addr + import_descriptor->FirstThunk);
        original_first_thunk = (PIMAGE_THUNK_DATA)((DWORD64)base_addr + import_descriptor->OriginalFirstThunk);

        for (; original_first_thunk->u1.AddressOfData != 0; original_first_thunk++, first_thunk++) {
            func_name = (PIMAGE_IMPORT_BY_NAME)((DWORD64)base_addr + original_first_thunk->u1.AddressOfData);
            func_addr = first_thunk->u1.Function;

            if (strcmp("GetModuleHandleA", func_name->Name) == 0) {
                DWORD old_protect = NULL;
                VirtualProtect((LPVOID)&first_thunk->u1.Function, 16, PAGE_EXECUTE_READWRITE, &old_protect);
                first_thunk->u1.Function = (DWORD64)hooked_func;
                
            }
        }
    }
    GetModuleHandleA(NULL);
}


int main()
{
    parse_pe();
}
