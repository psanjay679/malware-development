#include <windows.h>
#include <stdio.h>


EXTERN_C BOOL CALLBACK EnumDesktopProc(LPTSTR lpszDesktop, LPARAM lParam);
EXTERN_C VOID SetLibrary(UINT_PTR);

typedef NTSTATUS(*_NtAllocateVirtualMemory)(
    HANDLE    ProcessHandle,
    PVOID* BaseAddress,
    ULONG_PTR ZeroBits,
    PSIZE_T   RegionSize,
    ULONG     AllocationType,
    ULONG     Protect
    );

typedef struct _NTALLOCATE_VIRTUAL_MEMORY_ARGS {
    UINT_PTR    NtAllocateVirtualMemory;
    HANDLE      hProcess;
    PVOID* BaseAddress;
    PSIZE_T     RegionSize;
    ULONG       Protect;
}NTALLOCATE_VIRTUAL_MEMORY_ARGS, * PNTALLOCATE_VIRTUAL_MEMORY_ARGS;

int main() {

    char LibName[] = "wininet.dll";

    PVOID BaseAddress = NULL;
    SIZE_T RegionSize = 0x1000;

    UINT_PTR NtAllocateVirtualMemory = (UINT_PTR)(GetProcAddress(GetModuleHandleA("ntdll.dll"), "NtAllocateVirtualMemory"));
    NTALLOCATE_VIRTUAL_MEMORY_ARGS args = { 0 };
    args.NtAllocateVirtualMemory = NtAllocateVirtualMemory;
    args.hProcess = (HANDLE)-1;
    args.Protect = PAGE_EXECUTE_READWRITE;
    args.BaseAddress = &BaseAddress;
    args.RegionSize = &RegionSize;

    SetLibrary((UINT_PTR)LoadLibraryA);
    ::EnumDesktopsW(GetProcessWindowStation(), (DESKTOPENUMPROCW)EnumDesktopProc, (LPARAM)&args);

    printf("Library Loaded At: %p\n", GetModuleHandleA(LibName));
    return 0;

}